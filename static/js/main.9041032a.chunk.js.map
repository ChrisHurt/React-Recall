{"version":3,"sources":["javascripts/circleCalculations.js","components/navbar.component.js","components/datapoint.component.js","components/circlememoryoutcomes.component.js","components/datasetcontainer.component.js","components/loginregister.component.js","components/datacollections.component.js","components/newcollectionform.component.js","App.js","serviceWorker.js","index.js"],"names":["degToRads","Math","PI","radsToDegs","tierSizes","seedData","numDataPoints","seed","i","calculateSubCircleFullAngle","data","Object","entries","length","calculateNewOuterDiameter","fixedSubCircleRadius","sin","revolution","calculateSubCircleDiameter","outerDiameter","distributeData","reduce","array","datapoint","index","console","error","circleTiers","diameter","dataArray","subCircleDiameter","keys","map","circleTier","module","exports","calculateDataNeededForSecondRing","innerDiameter","ceil","asin","calculateSubCircleRadialDisplacement","calculateSubCircleRotationAngle","rotationCoefficient","Number","calculateNewRadialDisplacement","largestDiameter","sort","a","b","Navbar","logout","e","axios","post","then","props","updateUserID","undefined","style","this","user_id","className","to","onClick","React","Component","DataPoint","state","axiosRequestSent","tierIndex","parentDiameter","radialDisplacement","rotationAngle","transformOffset","text","image_url","top","left","transitionAllowed","allowTransitions","preventTransitions","centerTransition","removeDataByKey","backgroundSize","zIndex","incrementSuccess","incrementFailure","recordGuess","position","width","transform","transformOrigin","height","backgroundImage","transition","color","fontWeight","textShadow","textAlign","fontSize","textWrap","userSelect","backgroundColor","lineHeight","split","slice","join","padding","borderRadius","marginRight","id","CircleMemoryOutcomes","successes","failures","paddingLeft","paddingRight","display","justifyContent","DatasetContainer","renderContainerCircle","parentHeight","parentHeightUnit","parentWidth","parentWidthUnit","remembered","datapoint_id","key","axiosInDataPointsAllowed","session_id","res","log","newDataObject","newDataObj","keyValPair","setState","CircleCalculations","selectedCircleIndex","selectedCircleTierIndex","transitionsAllowed","renderCircleRing","fixedDiameter","person","memoryText","imageURL","centred","componentDidMount","match","params","collection_id","newDataArray","dataPoints","guessSessionIsValid","dataPointIDsGuessed","guesses","guess","dataPoint","filteredDataObject","filter","dp","flagToKeep","forEach","dataPointIDGuessed","_id","checkIfAlreadyGuessed","dataObject","currentDataPoint","imageUrl","catch","err","prepareToRedirect","redirecting","redirectOnFinish","completeMessage","LoginRegister","loginUsername","registerUsername","email","loginPassword","registerPassword","loginErrorMessage","registerErrorMessage","onChangeLoginUsername","target","value","onChangeLoginPassword","onChangeRegisterUsername","onChangeEmail","onChangeRegisterPassword","renderRedirect","submitLogin","preventDefault","loginData","username","password","authenticated","errorMessage","submitRegister","newUser","msg","success","$","click","animate","opacity","type","placeholder","name","onChange","href","DataCollections","collections","metrics","redirectURL","loading","dataCollection","collectionName","highlighted","renderRedirectToPractice","collectionID","sessionID","beginGuessSession","guessSession","getMetrics","collection","isHighlighted","bestRecall","worstRecall","averageRecall","toUpperCase","NewCollectionForm","addToCollection","onChangeMemoryText","onChangeImageURL","onChangeCollectionName","collectionNameChosen","marginBottom","submitCollection","dataset1","Placeholder","App","newID","renderLoginReturn","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uGAAA,IACIA,EAAYC,KAAKC,GAAG,IACpBC,EAAa,IAAIF,KAAKC,GAEtBE,EAAY,CAAC,EAAE,GAAG,IAElBC,EAAW,SAACC,GAEd,IADA,IAAIC,EAAO,GACHC,EAAI,EAAGA,EAAIF,EAAeE,IAChCD,EAAKC,GAAKA,EAEZ,OAAOD,GAWLE,EAA8B,SAACC,GACjC,OAvBe,IAuBMC,OAAOC,QAAQF,GAAMG,QAGxCC,EAA4B,SAACC,EAAqBT,GACpD,OAAOS,GAAwB,EAAK,EAAId,KAAKe,IAAIhB,GAAciB,IAAcX,MAO3EY,EAA6B,SAACC,EAAeT,GAC/C,OAAuB,EAAhBS,GAAmB,EAAM,GAAI,EAAIlB,KAAKe,IAAIhB,EAAWS,EAA4BC,GAAO,MAO7FU,EAAiB,SAACV,GACpB,OAAOC,OAAOC,QAAQF,GAAMW,QAAO,SAACC,EAAMC,EAAUC,GAmBlD,OAlBGA,EAAQpB,EAAU,IACfkB,EAAM,KACRA,EAAM,GAAK,IAEbA,EAAM,GAAGC,EAAU,IAAMA,EAAU,IAC3BC,EAAQpB,EAAU,GAAKA,EAAU,IACrCkB,EAAM,KACRA,EAAM,GAAK,IAEbA,EAAM,GAAGC,EAAU,IAAMA,EAAU,IAC1BC,EAAQpB,EAAU,GAAKA,EAAU,GAAKA,EAAU,IACrDkB,EAAM,KACRA,EAAM,GAAK,IAEbA,EAAM,GAAGC,EAAU,IAAMA,EAAU,IAEnCE,QAAQC,MAAM,+DAETJ,IACP,KAGAK,EAAc,SAACjB,EAAKkB,GACtB,IAAIC,EAAYT,EAAeV,GAC3BoB,EAAoB,EACpBX,EAAgB,EAiBpB,OAdEW,EADCnB,OAAOoB,KAAKrB,GAAMG,OAAS,EACRK,EAA2BU,EAASvB,EAAS,IAE7Ca,EAA2BU,EAASlB,GAEjDmB,EAAUG,KAAI,SAACC,EAAWT,GACpB,IAAVA,EACDL,EAAgBS,EAGhBT,EAAgBL,EAA0BgB,EAAkB,EADxC1B,EAAUoB,IAGhC,MAAO,CAAEd,KAAMuB,EAAYd,qBAW/Be,EAAOC,QAAU,CACf9B,WACA+B,iCAlFqC,SAACC,EAAcP,GACpD,OAAO7B,KAAKqC,KAAK,KAAOnC,EAAaF,KAAKsC,KAAM,GAAI,EAAIF,GAAgBP,EAAkB,QAkF1FU,qCA/EyC,SAACrB,EAAeT,GACzD,OAASS,GAAgBlB,KAAKe,IAAIhB,EAAUS,EAA4BC,GAAM,GAAG,IA+EjFD,8BACAK,4BACA2B,gCAtEoC,SAACC,EAAoBhC,GACzD,OAAOiC,OAAOD,EAAsBjC,EAA4BC,KAsEhEQ,6BACA0B,+BAhEmC,SAAC7B,EAAqBT,GACzD,OAAOQ,EAA0BC,EAAqBT,GAAiBS,GAgEvEK,iBACAO,cACAkB,gBAhBoB,SAACnC,EAAKkB,GAE1B,OAAOD,EAAYjB,EAAKkB,GAAUI,KAAI,SAAAC,GAAU,OAAEA,EAAWd,iBAAe2B,MAAK,SAACC,EAAEC,GAAH,OAAOA,EAAED,KAAG,M,iXCtF1EE,E,2MAEnBC,OAAS,SAACC,GAERC,IAAMC,KAAK,gCAAgCC,MAAK,WAC9C,EAAKC,MAAMC,kBAAaC,O,wEAM1B,OACE,yBAAKC,MAAO,SACeD,IAAvBE,KAAKJ,MAAMK,QACV,yBAAKC,UAAU,UACd,kBAAC,IAAD,CAAMC,GAAG,oCAAoCD,UAAU,gBAAvD,kBACA,kBAAC,IAAD,CAAMC,GAAG,qCAAqCD,UAAU,eAAxD,kBACA,kBAAC,IAAD,CAAMC,GAAG,oCAAqCD,UAAU,eAAxD,kBACA,4BAAQE,QAASJ,KAAKT,OAAQW,UAAU,iBAAxC,WAEA,Q,GApBwBG,IAAMC,WCArBC,G,uNAEnBC,MAAQ,CACNC,kBAAkB,G,wEAIX,IAAD,SAyBFT,KAAKJ,MAtBP/B,EAHI,EAGJA,MACA6C,EAJI,EAIJA,UACAC,EALI,EAKJA,eACA1C,EANI,EAMJA,SACA2C,EAPI,EAOJA,mBACAC,EARI,EAQJA,cACAC,EATI,EASJA,gBACAC,EAVI,EAUJA,KACAC,EAXI,EAWJA,UACAC,EAZI,EAYJA,IACAC,EAbI,EAaJA,KACAC,EAdI,EAcJA,kBACAC,EAfI,EAeJA,iBACAC,EAhBI,EAgBJA,mBACAC,EAjBI,EAiBJA,iBACAC,EAlBI,EAkBJA,gBACAC,EAnBI,EAmBJA,eACAC,EApBI,EAoBJA,OACAC,EArBI,EAqBJA,iBACAC,EAtBI,EAsBJA,iBAtBI,EAuBJC,YAIF,OACE,yBAAK1B,UAAU,+BACbH,MACE,CACE8B,SAAU,WACVC,MAAM,GAAD,OAAKlB,EAAL,MACLmB,UAAU,aAAD,OAAepB,EAAiBG,EAAhC,cAAqDH,EAAiBG,EAAtE,sBAAmGD,EAAnG,QACTmB,gBAAiB,cACjBC,OAAQ,EACRR,OAA8B,IAArBb,EAA2B,EAAMa,EAAO,EACjDR,MACAC,SAIJ,yBACEhB,UAAU,YACVH,MACE,CACEmC,gBAAgB,OAAD,OAASlB,EAAT,KACfQ,iBACAK,SAAU,WACVC,MAAM,GAAD,OAAK7D,EAAL,MACLgE,OAAO,GAAD,OAAKhE,EAAL,MAEN8D,UAAU,aAAD,OAAenB,EAAsB3C,EAAW,EAAhD,eAAyDA,EAAW,EAApE,uBAAoF4C,EAApF,QACTY,SACAU,WAAY,qEACZC,MAAO,UACPC,WAAY,MACZC,WAAY,kBACZC,UAAW,SACXC,SAAU,QACVC,SAAU,QAGdrC,QACGe,EAAsB,WACrBG,EAAiBzD,EAAM6C,GACvBW,KACG,cAGkB,IAAvBT,EAA4B,yBAC1Bb,MAAO,CACL+B,MAAM,GAAD,OAAK7D,EAAL,MACLgE,OAAO,GAAD,OAAKhE,EAAL,QAGV,yBAAK8B,MAAO,CACV2C,WAAY,SACX,0BACD3C,MAAO,CACLyC,SAAS,GACTG,gBAAiB,yBACjBV,OAAO,GAAD,OAAKhE,EAAW,EAAhB,MACN2E,WAAW,GAAD,OAAK3E,EAAW,EAAhB,QALX,WAOM,6BAAU8C,EAAK8B,MAAM,IAAIC,MAAM,EAAE,IAAIC,KAAK,IAAK,MACxD,4BACEhD,MAAO,CACL+B,MAAO,EAAE7D,EAAS,GAClByE,WAAY,OACZjB,OAAQA,EAAO,EACfuB,QAAS,SACTL,gBAAiB,UACjBM,aAAc,QACdC,YAAa,SAEf9C,QACE,WACEmB,EAAgB,EAAK3B,MAAMuD,GAAG,GAC9B/B,IACAM,MAdN,cAqBA,4BACE3B,MAAO,CACL+B,MAAO,EAAE7D,EAAS,GAClByE,WAAY,OACZjB,OAAQA,EAAO,EACfuB,QAAS,SACTL,gBAAiB,UACjBM,aAAc,SAEhB7C,QACE,WACEmB,EAAgB,EAAK3B,MAAMuD,GAAG,GAC9B/B,IACAO,MAbN,aAoBS,S,GAtIkBtB,IAAMC,YCHxB8C,E,2MACnB5C,MAAQ,G,wEAEC,IAAD,EAIFR,KAAKJ,MAFPyD,EAFI,EAEJA,UACAC,EAHI,EAGJA,SAIF,OACE,yBAAKvD,MAAS,CACZwD,YAAa,MACbC,aAAc,MACdR,QAAS,QACTS,QAAS,OACTC,eAAgB,gBAChBf,gBAAiB,UACjBP,MAAO,YAEP,iDAAuBiB,GACvB,mDAAyBC,Q,GArBiBjD,IAAMC,W,gBCQpD7D,EAAY,CAAC,EAAE,GAAG,IAEDkH,E,YAEnB,WAAY/D,GAAO,IAAD,8BAChB,4CAAMA,KAqBRgE,sBAAwB,SAAC3F,EAAS0E,EAAgB7B,EAAgBW,GAChE,OACE,yBAAK1B,MAAS,CACZkC,OAAQ,EACRH,MAAO,IAEP,yBACE5B,UAAU,eACVH,MAAO,CACL8B,SAAU,WACVC,MAAO,EAAE7D,EACTgE,OAAQ,EAAEhE,EACV0E,kBACAlB,OAASA,GAAU,IACnBR,IAAI,QAAD,OAAU,EAAKT,MAAMqD,aAAa,GAAlC,OAAsC,EAAKrD,MAAMsD,iBAAjD,cAAuE,EAAKtD,MAAMtB,gBAAkB4B,EAApG,OACHI,KAAK,QAAD,OAAU,EAAKV,MAAMuD,YAAY,GAAjC,OAAqC,EAAKvD,MAAMwD,gBAAhD,cAAqE,EAAKxD,MAAMtB,gBAAkB4B,EAAlG,YArCI,EA6ClBc,YAAc,SAACqC,EAAWC,EAAaC,GAClC,EAAK3D,MAAM4D,0BAEZ3E,IAAMC,KAAN,+CAAmD,EAAKc,MAAM6D,WAA9D,YAA4EH,EAA5E,QAA+F,CAACjE,QAAS,EAAKL,MAAMK,QAASgE,eAC1HtE,MAAK,SAAA2E,GACJxG,QAAQyG,MACRzG,QAAQyG,IAAI,uBACZzG,QAAQyG,IAAID,EAAIvH,MAChBe,QAAQyG,UArDE,EA4DlBhD,gBAAkB,SAAC4C,EAAIF,GACrBnG,QAAQyG,IAAR,eAAoBJ,IACpB,IAEIK,EAFexH,OAAOC,QAAQ,EAAKuD,MAAMzD,MAEZW,QAAO,SAAC+G,EAAWC,EAAW7G,GAO7D,OANG6G,EAAW,KAAKP,EACjBM,EAAWC,EAAW,IAAMA,EAAW,IAEvC5G,QAAQyG,IAAR,yBAA8BG,EAAW,KACzC5G,QAAQyG,IAAR,yBAA8BG,EAAW,MAEpCD,IACP,IAEEP,EAAeC,EAEnB1E,IAAMC,KAAN,+CAAmD,EAAKc,MAAM6D,WAA9D,YAA4EH,EAA5E,QAA+F,CAACjE,QAAS,EAAKL,MAAMK,QAASgE,eAC1HtE,MAAK,SAAA2E,GACJxG,QAAQyG,MACRzG,QAAQyG,IAAI,uBACZzG,QAAQyG,IAAID,EAAIvH,MAChBe,QAAQyG,SAGZ,EAAKI,SAAS,CACZ5H,KAAMyH,EACNxG,YAAa4G,IAAmB5G,YAAYwG,EAAc,EAAKhE,MAAMvC,UACrE4G,oBAA+D,IAAzC7H,OAAOC,QAAQuH,GAAetH,OAAgB,OAAI4C,EACxEgF,wBAAmE,IAAzC9H,OAAOC,QAAQuH,GAAetH,OAAgB,OAAI4C,EAC5EZ,gBAAiB0F,IAAmB1F,gBAAgBsF,EAAc,EAAKhE,MAAMvC,UAC7EmG,0BAA0B,KA1FZ,EA8FlB1C,iBAAmB,WACjB,EAAKiD,SAAS,CACZtB,UAAW,EAAK7C,MAAM6C,UAAY,KAhGpB,EAmGlB1B,iBAAmB,WACjB,EAAKgD,SAAS,CACZrB,SAAU,EAAK9C,MAAM8C,SAAW,KArGlB,EAyGlBhC,iBAAmB,SAACzD,EAAM6C,GACxB,EAAKiE,SAAS,CACZE,oBAAqBhH,EACrBiH,wBAAyBpE,KA5GX,EAgHlBU,iBAAmB,WACjB,EAAKuD,SAAS,CACZI,oBAAoB,KAlHN,EAsHlB1D,mBAAqB,WACnB,EAAKsD,SAAS,CACZI,oBAAoB,KAxHN,EA4HlBC,iBAAmB,SAAC/G,EAASlB,EAAK+D,EAAgBmE,EAAcvE,EAAU0D,GACxE,OACE,6BACGpH,OAAOC,QAAQF,GAAMsB,KAAI,SAAC6G,EAAOrH,GAC9B,OAAO,kBAAC,EAAD,CAEL+D,YAAe,EAAKA,YACpBwC,yBAA4BA,EAC5BD,IAAG,aAAQtG,GACXsF,GAAI+B,EAAO,GACXzD,OAAqB,IAAZf,EAAkBA,EAAa,EACxCC,eAAgB1C,EAChBA,SAAW,EAAKuC,MAAMqE,sBAAwBhH,GAAS,EAAK2C,MAAMsE,0BAA4BpE,EAAc,EAAE,EAAKF,MAAMxC,YAAY,GAAvB,cAA+CiH,GAAiBL,IAAmBrH,2BAA2BU,EAASlB,GACrO8D,cAAe+D,IAAmB9F,gCAAgCjB,EAAMd,GACxE6D,mBAAqB,EAAKJ,MAAMqE,sBAAwBhH,GAAS,EAAK2C,MAAMsE,0BAA4BpE,EAAa,EAAKkE,IAAmB3F,+BAA+BgG,EAAc,EAAExI,EAAUiE,KAAekE,IAAmB/F,qCAAqCZ,EAASlB,GACtRgE,KAAMmE,EAAO,GAAGC,WAChBnE,UAAWkE,EAAO,GAAGE,SACrBtE,gBAAiBA,EACjBG,IAAG,eAAU,EAAKT,MAAMqD,aAAa,GAAlC,OAAsC,EAAKrD,MAAMsD,iBAAjD,cAAuE,EAAKtD,MAAMtB,gBAAlF,OACHgC,KAAI,eAAU,EAAKV,MAAMuD,YAAY,GAAjC,OAAqC,EAAKvD,MAAMwD,gBAAhD,cAAqE,EAAKxD,MAAMtB,gBAAhF,OACJiC,kBAAmB,EAAKX,MAAMuE,mBAC9BlH,MAAOA,EACP6C,UAAWA,EACX2E,QAAU,EAAKR,sBAAwBhH,GAAS,EAAKiH,0BAA4BpE,EACjFY,iBAAkB,EAAKA,iBACvBD,mBAAoB,EAAKA,mBACzBD,iBAAkB,EAAKA,iBACvBG,gBAAiB,EAAKA,gBACtBG,iBAAkB,EAAKA,iBACvBC,iBAAkB,EAAKA,iBACvBH,eAAc,UAAM,EAAKhB,MAAMqE,sBAAwBhH,GAAS,EAAK2C,MAAMsE,0BAA4BpE,EAAc,EAAE,EAAKF,MAAMxC,YAAY,GAAvB,cAA+CiH,GAAiBL,IAAmBrH,2BAA2BU,EAASlB,GAAhO,cAA6O,EAAKyD,MAAMqE,sBAAwBhH,GAAS,EAAK2C,MAAMsE,0BAA4BpE,EAAc,EAAE,EAAKF,MAAMxC,YAAY,GAAvB,cAA+CiH,GAAiBL,IAAmBrH,2BAA2BU,EAASlB,GAAvc,mBA1JR,EAkKlBuI,kBAAoB,WAAO,IAAD,EAEY,EAAK1F,MAAM2F,MAAMC,OAA/CC,EAFkB,EAElBA,cAAepB,EAFG,EAEHA,WAErB5E,IAAMC,KAAN,gDAAoD+F,EAApD,eAA+E,CAACxF,QAAS,EAAKL,MAAMK,UACjGN,MAAK,SAAA2E,GACJ,IAAIoB,EAAepB,EAAIvH,KAAK4I,WAG5BlG,IAAMC,KAAN,+CAAmD2E,EAAnD,YAAwE,CAACpE,QAAS,EAAKL,MAAMK,UAAUN,MAAK,SAAA2E,GACvGA,EAAIvH,KAAK6I,qBACV9H,QAAQyG,IAAI,SAGZ9E,IAAMC,KAAN,+CAAmD2E,EAAnD,YAAwE,CAACpE,QAAS,EAAKL,MAAMK,UAAUN,MAAK,SAAA2E,GAE1G,IAAIuB,EAAsBvB,EAAIvH,KAAK+I,QAAQzH,KAAI,SAAA0H,GAAK,OAAEA,EAAMC,aAE5DlI,QAAQyG,MACRzG,QAAQyG,IAAI,mBACZzG,QAAQyG,IAAImB,GACZ5H,QAAQyG,MACRzG,QAAQyG,IAAI,uBACZzG,QAAQyG,IAAIsB,GAEZ,IAgBII,EAJoBP,EAAaQ,QAAO,SAAAF,GAC1C,OAb4B,SAACG,GAC7B,IAAIC,GAAa,EAOjB,OANAP,EAAoBQ,SAAQ,SAACC,GACxBH,EAAGI,MAAQD,IACZxI,QAAQyG,IAAR,mBAAwB+B,EAAxB,eACAF,GAAa,MAGVA,EAKAI,CAAsBR,MAGYtI,QAAO,SAAC+I,EAAWC,GAK5D,OAJAD,EAAWC,EAAiBH,KAAO,CACjCnB,SAAUsB,EAAiBC,SAC3BxB,WAAYuB,EAAiBvB,YAExBsB,IACP,IAEF3I,QAAQyG,MACRzG,QAAQyG,IAAI,sBACZzG,QAAQyG,IAAI0B,GACZnI,QAAQyG,MAGR,EAAKI,SAAS,CACZ5H,KAAMkJ,EACNjI,YAAa4G,IAAmB5G,YAAYiI,EAAmB,EAAKrG,MAAM3B,UAC1E4G,oBAAoE,IAA9C7H,OAAOC,QAAQgJ,GAAoB/I,OAAgB,OAAI4C,EAC7EgF,wBAAwE,IAA9C9H,OAAOC,QAAQgJ,GAAoB/I,OAAgB,OAAI4C,EACjFZ,gBAAiB0F,IAAmB1F,gBAAgB+G,EAAmB,EAAKzF,MAAMvC,UAClFoG,oBAMJvG,QAAQyG,IAAI,WAEZ9E,IAAMC,KAAN,+CAAmD+F,EAAnD,QAAuE,CAACxF,QAAS,EAAKL,MAAMK,UAAUN,MAAK,SAAA2E,GAEzGD,EAAaC,EAAIvH,KAAKsH,WAEtBvG,QAAQyG,IAAI,qBACZ,IAAIC,EAAgBkB,EAAahI,QAAO,SAAC+I,EAAWC,GAKlD,OAJAD,EAAWC,EAAiBH,KAAO,CACjCnB,SAAUsB,EAAiBC,SAC3BxB,WAAYuB,EAAiBvB,YAExBsB,IACP,IAEF3I,QAAQyG,MACRzG,QAAQyG,IAAI,iBACZzG,QAAQyG,IAAIC,GACZ1G,QAAQyG,MAGR,EAAKI,SAAS,CACZ5H,KAAMyH,EACNxG,YAAa4G,IAAmB5G,YAAYwG,EAAc,EAAK5E,MAAM3B,UACrE4G,oBAA+D,IAAzC7H,OAAOC,QAAQuH,GAAetH,OAAgB,OAAI4C,EACxEgF,wBAAmE,IAAzC9H,OAAOC,QAAQuH,GAAetH,OAAgB,OAAI4C,EAC5EZ,gBAAiB0F,IAAmB1F,gBAAgBsF,EAAc,EAAKhE,MAAMvC,UAC7EoG,yBA0BPuC,OAAM,SAAAC,GAAG,OAAE/I,QAAQyG,IAAR,iBAAsBsC,QA1RtB,EA8RlBC,kBAAoB,WACyB,IAAxC9J,OAAOoB,KAAK,EAAKoC,MAAMzD,MAAMG,QAAiB,EAAKsD,MAAMuG,aAC1D,EAAKpC,SAAS,CACZoC,aAAa,KAjSD,EAsSlBC,iBAAmB,WACjB,GAAG,EAAKxG,MAAMuG,YACZ,OAAO,kBAAC,IAAD,CAAU5G,GAAG,uCAtStB,EAAKK,MAAQ,CACXvC,SAAU,EAAK2B,MAAM3B,SACrBE,kBAAmByG,IAAmBrH,2BAA2B,EAAKqC,MAAM3B,SAAU2G,IAAmB5G,YAAY,EAAK4B,MAAM7C,KAAK,EAAK6C,MAAM3B,UAAU,GAApE,MACtFlB,KAAM,EAAK6C,MAAM7C,KACjBiB,YAAa4G,IAAmB5G,YAAY,EAAK4B,MAAM7C,KAAK,EAAK6C,MAAM3B,UACvEiB,gBAAiB0F,IAAmB1F,gBAAgB,EAAKU,MAAM7C,KAAK,EAAK6C,MAAM3B,UAC/E8F,YAAa,EAAKnE,MAAMmE,YACxBF,aAAc,EAAKjE,MAAMiE,aACzBG,gBAAiB,EAAKpE,MAAMoE,gBAC5BF,iBAAkB,EAAKlE,MAAMkE,iBAC7BiB,oBAAoB,EACpB1B,UAAW,EACXC,SAAU,EACVe,gBAAYvE,EACZsE,0BAA0B,EAC1B6C,qBAAiBnH,EACjBiH,aAAa,GAlBC,E,sEA4ST,IAAD,SAOF/G,KAAKQ,MALPrC,EAFI,EAEJA,kBACAH,EAHI,EAGJA,YACAkB,EAJI,EAIJA,gBACAmE,EALI,EAKJA,UACAC,EANI,EAMJA,SAEF,OACE,yBACEpD,UAAU,YACVH,MAAO,IAERC,KAAK8G,oBACL9G,KAAKgH,mBACJhH,KAAKQ,MAAMyG,gBAAmBjH,KAAKQ,MAAMyG,gBAAkB,GAC1DjJ,EAAYK,KAAI,SAACC,EAAWT,GAC3B,OACE,yBACEsG,IAAG,sBAAiBtG,GACpBkC,MAAO,CACL+B,MAAO,EACPG,OAAQ,IAKV,EAAK+C,iBACH1G,EAAWd,cACXc,EAAWvB,KACXmC,EAAkBZ,EAAWd,cAC5BR,OAAOoB,KAAKE,EAAWvB,MAAMG,SAAWT,EAAUoB,IAAkB,IAARA,EAAcM,EAAsB,KACjGN,EACA,EAAK2C,MAAM4D,0BAKb,EAAKR,sBACHtF,EAAWd,cACX,UAEE0B,EAAkBZ,EAAWd,mBAOvC,kBAAC,EAAD,CAAsB6F,UAAWA,EAAWC,SAAUA,S,GA/VhBjD,IAAMC,W,yBCN/B4G,E,2MAEnB1G,MAAQ,CACN2G,cAAe,GACfC,iBAAkB,GAClBC,MAAO,GACPC,cAAe,GACfC,iBAAkB,GAClBC,kBAAmB,GACnBC,qBAAsB,I,EAGxBC,sBAAwB,SAAClI,GACvB,EAAKmF,SAAS,CACZwC,cAAe3H,EAAEmI,OAAOC,S,EAI5BC,sBAAwB,SAACrI,GACvB,EAAKmF,SAAS,CACZ2C,cAAe9H,EAAEmI,OAAOC,S,EAI5BE,yBAA2B,SAACtI,GAC1B,EAAKmF,SAAS,CACZyC,iBAAkB5H,EAAEmI,OAAOC,S,EAI/BG,cAAgB,SAACvI,GACf,EAAKmF,SAAS,CACZ0C,MAAO7H,EAAEmI,OAAOC,S,EAIpBI,yBAA2B,SAACxI,GAC1B,EAAKmF,SAAS,CACZ4C,iBAAkB/H,EAAEmI,OAAOC,S,EAI/BK,eAAiB,WACf,GAA0B,OAAvB,EAAKrI,MAAMK,cAA2CH,IAAvB,EAAKF,MAAMK,QAC3C,OAAO,kBAAC,IAAD,CAAUE,GAAG,uC,EAIxB+H,YAAc,SAAC1I,GACbA,EAAE2I,iBAEF,IAAMC,EAAY,CAAEC,SAAU,EAAK7H,MAAM2G,cAAemB,SAAU,EAAK9H,MAAM8G,eAC7E7H,IAAMC,KAAK,8BAA8B0I,GAAWzI,MAAK,SAAA2E,GACpDA,EAAIvH,KAAKwL,eACV,EAAK3I,MAAMC,aAAayE,EAAIvH,KAAKkD,YAMpC2G,OAAM,SAAAC,GAAG,OAAI,EAAKlC,SAAS,CAAC6D,aAAc3B,Q,EAG7C4B,eAAiB,SAACjJ,GAChBA,EAAE2I,iBACF,IAAMO,EAAU,CACdL,SAAU,EAAK7H,MAAM4G,iBACrBC,MAAO,EAAK7G,MAAM6G,MAClBiB,SAAU,EAAK9H,MAAM+G,kBAEvB9H,IAAMC,KAAK,kCAAmCgJ,GAC3C/I,MAAK,SAAA2E,GAEJ,GADAxG,QAAQyG,IAAID,EAAIvH,KAAK4L,KAClBrE,EAAIvH,KAAK6L,QAAQ,CAClB9K,QAAQyG,IAAI,2CACZ,IAAM6D,EAAY,CAAEC,SAAUK,EAAQL,SAAUC,SAAUI,EAAQJ,UAClE7I,IAAMC,KAAK,8BAA8B0I,GAAWzI,MAAK,SAAA2E,GAGpDA,EAAIvH,KAAKwL,sBAQd,EAAK5D,SAAS,CAAC6D,aAAc,4CAGhC5B,OAAM,SAAAC,GAAG,OAAI,EAAKlC,SAAS,CAAC6D,aAAc3B,Q,EAI/CvB,kBAAoB,WAClBuD,IAAE,cAAcC,OAAM,WACpBD,IAAE,QAAQE,QAAQ,CAAC9G,OAAQ,SAAU+G,QAAS,UAAW,Y,wEAK3D,OACA,yBAAK9I,UAAU,cACZF,KAAKiI,iBACJjI,KAAKQ,MAAMgH,kBAAsB,6BAAMxH,KAAKQ,MAAMgH,mBAA4B,GAChF,yBAAKtH,UAAU,QACb,0BAAMA,UAAU,iBACd,2BACE+I,KAAK,OACLC,YAAY,WACZC,KAAK,WACLC,SAAUpJ,KAAK8H,yBACfF,MAAO5H,KAAKQ,MAAM4G,mBAEpB,2BACE6B,KAAK,WACLC,YAAY,WACZC,KAAK,WACLC,SAAUpJ,KAAKgI,yBACfJ,MAAO5H,KAAKQ,MAAM+G,mBAEpB,2BACE0B,KAAK,OACLC,YAAY,gBACZC,KAAK,QACLC,SAAUpJ,KAAK+H,cACfH,MAAO5H,KAAKQ,MAAM6G,QAEpB,4BAAQ4B,KAAK,SAAS7I,QAASJ,KAAKyI,gBAApC,UACA,uBAAGvI,UAAU,WAAb,uBAA2C,uBAAGmJ,KAAK,KAAR,aAE7C,0BAAMnJ,UAAU,cACd,2BACE+I,KAAK,OACLC,YAAY,WACZC,KAAK,WACLC,SAAUpJ,KAAK0H,sBACfE,MAAO5H,KAAKQ,MAAM2G,gBAEpB,2BACE8B,KAAK,WACLC,YAAY,WACZC,KAAK,WACLC,SAAUpJ,KAAK6H,sBACfD,MAAO5H,KAAKQ,MAAM8G,gBAEpB,4BAAQ2B,KAAK,SAAS7I,QAASJ,KAAKkI,aAApC,SACA,uBAAGhI,UAAU,WAAb,mBAAuC,uBAAGmJ,KAAK,KAAR,6B,GAnJNhJ,IAAMC,WCD5BgJ,G,iNAEnB9I,MAAQ,CACN+I,YAAa,GACbC,QAAS,GACTC,YAAa,GACbC,SAAS,G,EAGXpE,kBAAoB,WAChB7F,IAAMC,KAAN,wCAAmD,CAACO,QAAS,EAAKL,MAAMK,UACzEN,MAAK,SAAC2E,GAEH,EAAKK,SAAS,CASZ4E,YAAajF,EAAIvH,KAAKmJ,QAAO,SAAAyD,GAC3B,OAAwC,IAArCA,EAAehE,WAAWzI,UAI5BmB,KAAI,SAACsL,EAAe9L,GACrB,MAAO,CACL+L,eAAgBD,EAAeC,eAC/BnE,cAAekE,EAAepD,IAC9BsD,aAAa,EACbhM,YAGJ6L,SAAS,OAEZ9C,OAAM,SAAAC,GAAG,OAAE/I,QAAQyG,IAAR,UAAesC,Q,EAE/BiD,yBAA2B,WACzB,QAA2ChK,IAAxC,EAAKU,MAAMiJ,YAAYM,aACxB,OAAO,kBAAC,IAAD,CAAU5J,GAAE,iCAA4B,EAAKK,MAAMiJ,YAAYM,aAAnD,YAAoE,EAAKvJ,MAAMiJ,YAAYO,UAAc,EAAKxJ,MAAMiJ,YAAYO,UAAc,U,EAIrK/B,eAAiB,WACW,OAAvB,EAAKrI,MAAMK,SAAoB,EAAKL,MAAMK,S,EAM/CgK,kBAAoB,SAACxE,GAGnBhG,IAAMC,KAAN,+DAAmE+F,GAAgB,CAACxF,QAAS,EAAKL,MAAMK,UAAUN,MAAK,SAAC2E,GAExH,IAAI0F,EAAY,UAGelK,IAA1BwE,EAAIvH,KAAKmN,eAAwD,IAA1B5F,EAAIvH,KAAKmN,eAEjDF,EAAY1F,EAAIvH,KAAKmN,aAAa3D,KAGpC,EAAK5B,SAAS,CACZ8E,YAAa,CACXM,aAActE,EACduE,UAAWA,S,EAMnBG,WAAa,SAACtM,EAAM4H,GAClBhG,IAAMC,KAAN,wDAA4D+F,GAAgB,CAACxF,QAAS,EAAKL,MAAMK,UAChGN,MAAK,SAAC2E,GAEL,EAAKK,SAAS,CACZ4E,YAAa,EAAK/I,MAAM+I,YAAYlL,KAAI,SAAA+L,GAEtC,IAAIC,GAAgB,EAKpB,OAJGD,EAAWvM,QAAUA,IACtBwM,GAAgB,GAGX,CACLT,eAAgBQ,EAAWR,eAC3BnE,cAAe2E,EAAW3E,cAC1BoE,YAAaQ,EACbxM,MAAOuM,EAAWvM,UAGtB2L,QAAS,CACPI,eAAgB,EAAKpJ,MAAM+I,YAAYrD,QAAO,SAACkE,GAAD,OAAcA,EAAWvM,QAAUA,KAAO,GAAG+L,eAC3FU,WAAahG,EAAIvH,KAAKwN,YAAYC,cAAgBlG,EAAIvH,KAAKuN,WAAWE,cAAiB,oBAA3E,wBAAkHlG,EAAIvH,KAAKuN,WAAWnF,WAAtI,YAAoJb,EAAIvH,KAAKuN,WAAWE,cAAxK,KACZA,cAAgBlG,EAAIvH,KAAKwN,YAAYC,cAAgBlG,EAAIvH,KAAKuN,WAAWE,cAAiB,GAA3E,2BAAoGlG,EAAIvH,KAAKyN,cAA7G,KACfD,YAAcjG,EAAIvH,KAAKwN,YAAYC,cAAgBlG,EAAIvH,KAAKuN,WAAWE,cAAiB,GAA3E,yBAAkGlG,EAAIvH,KAAKwN,YAAYpF,WAAvH,YAAqIb,EAAIvH,KAAKwN,YAAYC,cAA1J,WAGhB5D,OAAM,SAAAC,GAAG,OAAE/I,QAAQyG,IAAR,UAAesC,Q,wEAGtB,IAAD,OACN,OACE,6BACG7G,KAAKiI,iBACLjI,KAAK8J,2BACN,yBAAK5J,UAAU,mBACb,yBAAKH,MAAQC,KAAKQ,MAAMgJ,QAAQI,eAAmB,GAAM,CAAC5G,QAAS,GAAK9C,UAAU,uBAAwBF,KAAKQ,MAAMgJ,QAAQI,eAAmB5J,KAAKQ,MAAMgJ,QAAQI,eAAea,cAAkB,IACpM,yBAAK1K,MAAQC,KAAKQ,MAAMgJ,QAAQI,eAAmB,GAAM,CAAC5G,QAAS,GAAK9C,UAAU,UAAWF,KAAKQ,MAAMgJ,QAAQgB,eAChH,yBAAKzK,MAAQC,KAAKQ,MAAMgJ,QAAQI,eAAmB,GAAM,CAAC5G,QAAS,GAAK9C,UAAU,UAAUF,KAAKQ,MAAMgJ,QAAQc,YAC/G,yBAAKvK,MAAQC,KAAKQ,MAAMgJ,QAAQI,eAAmB,GAAM,CAAC5G,QAAS,GAAK9C,UAAU,UAAUF,KAAKQ,MAAMgJ,QAAQe,cAE9E,IAAlCvK,KAAKQ,MAAM+I,YAAYrM,QAAiB8C,KAAKQ,MAAMkJ,QAAiK,GAAtJ,yBAAKxJ,UAAU,kCAAiC,kBAAC,IAAD,CAAMA,UAAU,uBAAuBC,GAAG,yBAA1C,yBAC9GH,KAAKQ,MAAM+I,YAAYlL,KAAI,SAAC+L,EAAWvM,GAAZ,OAC5B,yBAAKsG,IAAG,oBAAetG,GAASqC,UAAS,0BAAsBkK,EAAWP,YAAgB,yBAA6B,KACrH,yBAAK3J,UAAU,wBAAwBkK,EAAWR,gBAElD,yBAAKxJ,QAAS,kBAAI,EAAK+J,WAAWtM,EAAMuM,EAAW3E,gBAAgBvF,UAAS,2BAA5E,WAgBA,yBAAKE,QAAS,kBAAI,EAAK6J,kBAAkBG,EAAW3E,gBAAgBvF,UAAU,YAA9E,qB,GAvImCG,IAAMC,YCA9BoK,G,iNAEnBlK,MAAQ,CACNoJ,eAAgB,GAChBG,aAAc,GACd5E,WAAY,GACZC,SAAU,GACVnH,SAAU,K,EAGZ0M,gBAAkB,WAEhBlL,IAAMC,KAAN,gDAAoD,EAAKc,MAAMuJ,aAA/D,QACA,CACE9J,QAAS,EAAKL,MAAMK,QACpBkF,WAAY,EAAK3E,MAAM2E,WACvBwB,SAAU,EAAKnG,MAAM4E,WAEpBzF,MAAK,SAAA2E,GACJ,EAAKK,SAAS,CACZQ,WAAY,GACZC,SAAU,S,EAKlBwF,mBAAqB,SAACpL,GACpB,EAAKmF,SAAS,CACZQ,WAAY3F,EAAEmI,OAAOC,S,EAIzBiD,iBAAmB,SAACrL,GAClB,EAAKmF,SAAS,CACZS,SAAU5F,EAAEmI,OAAOC,S,EAIvBkD,uBAAyB,SAACtL,GACxB,EAAKmF,SAAS,CACZiF,eAAgBpK,EAAEmI,OAAOC,S,EAI7BmD,qBAAuB,SAACvL,GACtBA,EAAE2I,iBAEFU,IAAE,QAAQE,QAAQ,CAAC9G,OAAQ,SAAU+G,QAAS,UAAW,QACzDvJ,IAAMC,KAAN,4CAAuD,CAACO,QAAS,EAAKL,MAAMK,QAAS2J,eAAgB,EAAKpJ,MAAMoJ,iBAC7GjK,MAAK,SAAA2E,GACJ,EAAKK,SAAS,CACZoF,aAAczF,EAAIvH,KAAK0I,oB,wEAM7B,OACE,yBAAKvF,UAAU,cACf,yBAAKA,UAAU,QACb,0BAAMA,UAAU,iBACd,4BAAKF,KAAKQ,MAAMoJ,gBAChB,2BACEX,KAAK,OACLC,YAAY,cACZC,KAAK,aACLC,SAAUpJ,KAAK4K,mBACfhD,MAAO5H,KAAKQ,MAAM2E,aAEpB,2BACE8D,KAAK,OACLC,YAAY,YACZC,KAAK,WACLC,SAAUpJ,KAAK6K,iBACfjD,MAAO5H,KAAKQ,MAAM4E,WAGpB,yBACElF,UAAU,kBAEV,yBACEA,UAAU,iBACVH,MAAO,CACLmC,gBAAgB,OAAD,OAASlC,KAAKQ,MAAM4E,SAApB,SAOrB,4BACE6D,KAAK,SACL7I,QAASJ,KAAK2K,gBACd5K,MAAO,CAACiL,aAAc,QAHxB,qBAOA,4BACE/B,KAAK,SACL7I,QAASJ,KAAKiL,kBAFhB,sBAOF,0BAAM/K,UAAU,cACd,+CACA,2BACE+I,KAAK,OACLC,YAAY,wBACZC,KAAK,iBACLC,SAAUpJ,KAAK8K,uBACflD,MAAO5H,KAAKQ,MAAMoJ,iBAEpB,4BACEX,KAAK,SACL7I,QAASJ,KAAK+K,sBAFhB,mB,GAjHqC1K,IAAMC,YCoBjD4K,EAAY,CACZC,YAAa,IA6FFC,E,2MAzCb5K,MAAQ,CACNP,aAASH,G,EAGXD,aAAe,SAACwL,GACd,EAAK1G,SAAS,CACZ1E,QAASoL,K,EAIbC,kBAAoB,WAClB,QAA0BxL,IAAvB,EAAKU,MAAMP,QACZ,OAAO,kBAAC,IAAD,CAAUE,GAAG,yB,wEAIf,IAAD,OACN,OACE,kBAAC,IAAD,KACGH,KAAKsL,oBACN,yBACEpL,UAAU,MACVH,MAAS,CACP4C,gBAAiB,YAGrB,kBAAC,EAAD,CAAQ1C,QAASD,KAAKQ,MAAMP,QAASJ,aAAcG,KAAKH,eACxD,kBAAC,IAAD,CAAO0L,KAAK,sBAAsBC,OAAK,EAACC,UAAW,kBAAI,kBAAC,EAAD,CAAmBxL,QAAS,EAAKO,MAAMP,QAASJ,aAAc,EAAKA,kBACxH,kBAAC,IAAD,CAAO0L,KAAK,oCAAoCC,OAAK,EAACC,UAAW,kBAAM,kBAAC,EAAD,CAAiBxL,QAAS,EAAKO,MAAMP,QAASJ,aAAc,EAAKA,kBACxI,kBAAC,IAAD,CAAO0L,KAAK,qCAAqCC,OAAK,EAACC,UAAW,kBAAI,kBAAC,EAAD,CAAmBxL,QAAS,EAAKO,MAAMP,aAE7G,kBAAC,IAAD,CAAOsL,KAAK,oDAAoDE,UAC9D,gBAAElG,EAAF,EAAEA,MAAF,OAAW,kBAAC,EAAD,CAAkBA,MAASA,EAAOtF,QAAS,EAAKO,MAAMP,QAASJ,aAAc,EAAKA,aAAc5B,SAAU,IAAKlB,KAAMmO,EAAUnH,YAAa,IAAKF,aAAc,IAAKG,gBAAiB,KAAMF,iBAAkB,gB,GAlClNzD,IAAMC,WChEJoL,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStG,MACvB,2DCZNuG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzM,MAAK,SAAA0M,GACjCA,EAAaC,kB","file":"static/js/main.9041032a.chunk.js","sourcesContent":["var revolution = 360\nvar degToRads = Math.PI/180\nvar radsToDegs = 180/Math.PI\n\nvar tierSizes = [8,15,22]\n\nlet seedData = (numDataPoints) => {\n  let seed = {}\n  for(let i = 0; i < numDataPoints; i++){\n    seed[i] = i;\n  }\n  return seed\n}\n\nlet calculateDataNeededForSecondRing = (innerDiameter,subCircleDiameter) =>{\n  return Math.ceil(180 / (radsToDegs * Math.asin((1)/(1+ (innerDiameter)/(subCircleDiameter/2) ))))\n}\n\nlet calculateSubCircleRadialDisplacement = (outerDiameter, data) => {\n  return ((outerDiameter)/(Math.sin(degToRads*calculateSubCircleFullAngle(data)/2)+1))\n}\n\nlet calculateSubCircleFullAngle = (data) => {\n  return (revolution / Object.entries(data).length)\n}\n\nlet calculateNewOuterDiameter = (fixedSubCircleRadius,numDataPoints) => {\n  return fixedSubCircleRadius * (1 + (1)/(Math.sin(degToRads * ((revolution/2)/numDataPoints))))\n}\n\nlet calculateSubCircleRotationAngle = (rotationCoefficient,data) => {\n  return Number(rotationCoefficient * calculateSubCircleFullAngle(data))\n}\n\nlet calculateSubCircleDiameter = (outerDiameter, data) => {\n  return outerDiameter * 2*(1 - ((1)/(1 + Math.sin(degToRads*(calculateSubCircleFullAngle(data))/2))))\n}\n\nlet calculateNewRadialDisplacement = (fixedSubCircleRadius,numDataPoints) => {\n  return calculateNewOuterDiameter(fixedSubCircleRadius,numDataPoints) - fixedSubCircleRadius\n}\n\nlet distributeData = (data) => {\n  return Object.entries(data).reduce((array,datapoint,index)=>{\n    if(index < tierSizes[0]){\n      if(!array[0]){\n        array[0] = {}\n      }\n      array[0][datapoint[0]] = datapoint[1]\n    } else if(index < tierSizes[0] + tierSizes[1]){\n      if(!array[1]){\n        array[1] = {}\n      }\n      array[1][datapoint[0]] = datapoint[1]\n    } else if (index < tierSizes[0] + tierSizes[1] + tierSizes[2]){\n      if(!array[2]){\n        array[2] = {}\n      }\n      array[2][datapoint[0]] = datapoint[1]\n    } else {\n      console.error(\"No more than 45 datapoints are supported for this component\")\n    }\n    return array\n  },[])\n}\n\nlet circleTiers = (data,diameter) => {\n  let dataArray = distributeData(data)\n  let subCircleDiameter = 0;\n  let outerDiameter = 0\n\n  if(Object.keys(data).length > 8){\n    subCircleDiameter = calculateSubCircleDiameter(diameter,seedData(8))\n  } else {\n    subCircleDiameter = calculateSubCircleDiameter(diameter,data)\n  }\n  let dA = dataArray.map((circleTier,index)=>{\n    if(index === 0){\n      outerDiameter = diameter\n    } else {\n      let numDataPoints = tierSizes[index]\n      outerDiameter = calculateNewOuterDiameter(subCircleDiameter/2,numDataPoints)\n    }\n    return { data: circleTier, outerDiameter }\n  })\n  // console.log(dA)\n  return dA\n}\n\nlet largestDiameter = (data,diameter) => {\n\n  return circleTiers(data,diameter).map(circleTier=>circleTier.outerDiameter).sort((a,b)=>b-a)[0]\n}\n\nmodule.exports = {\n  seedData,\n  calculateDataNeededForSecondRing,\n  calculateSubCircleRadialDisplacement,\n  calculateSubCircleFullAngle,\n  calculateNewOuterDiameter,\n  calculateSubCircleRotationAngle,\n  calculateSubCircleDiameter,\n  calculateNewRadialDisplacement,\n  distributeData,\n  circleTiers,\n  largestDiameter\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport \"./navbar.component.scss\"\nimport axios from 'axios'\n\nexport default class Navbar extends React.Component {\n\n  logout = (e) => {\n    // e.preventDefault()\n    axios.post('http://localhost:5000/logout').then(()=>{\n      this.props.updateUserID(undefined)\n      // window.location = '/login'\n    })\n  }\n\n  render(){\n    return (\n      <nav style={{}}>\n        {(this.props.user_id !== undefined) ? \n          (<div className='navbar'>\n            <Link to=\"/React-Recall/data_collections/me\" className=\"navbar-brand\">React. Recall.</Link>\n            <Link to=\"/React-Recall/data_collections/new\" className=\"navbar-link\">New Collection</Link>\n            <Link to=\"/React-Recall/data_collections/me\"  className=\"navbar-link\">My Collections</Link>\n            <button onClick={this.logout} className=\"logout-button\">Logout</button>\n          </div>)\n          : ''}\n      </nav>\n    )\n  }\n}","import React from 'react'\nimport './DataPoint.scss'\nimport axios from 'axios'\n\n\nexport default class DataPoint extends React.Component {\n\n  state = {\n    axiosRequestSent: false\n  }\n\n\n  render(){\n    \n    const {\n      index,\n      tierIndex,\n      parentDiameter,\n      diameter,\n      radialDisplacement,\n      rotationAngle,\n      transformOffset,\n      text,\n      image_url,\n      top,\n      left,\n      transitionAllowed,\n      allowTransitions,\n      preventTransitions,\n      centerTransition,\n      removeDataByKey,\n      backgroundSize,\n      zIndex,\n      incrementSuccess,\n      incrementFailure,\n      recordGuess\n      \n    } = this.props\n    \n    return (\n      <div className=\"datapoint-rotation-container\"\n        style={\n          {\n            position: \"relative\",\n            width: `${radialDisplacement}px`,\n            transform: `translate(${parentDiameter + transformOffset}px,${parentDiameter + transformOffset}px) rotate(${rotationAngle}deg)`,\n            transformOrigin: 'left center',\n            height: 0,\n            zIndex: (radialDisplacement===0) ? (4)  : zIndex+1,\n            top,\n            left\n          }\n        }\n      >\n        <div \n          className=\"datapoint\" \n          style={\n            {\n              backgroundImage: `url(${image_url})`,\n              backgroundSize,\n              position: 'relative',\n              width: `${diameter}px`,\n              height: `${diameter}px`,\n              // lineHeight: `${diameter/2}px`,\n              transform: `translate(${radialDisplacement - (diameter / 2)}px,${-diameter / 2}px) rotate(-${rotationAngle}deg)`,\n              zIndex,\n              transition: 'transform 0.35s ease-in, width 0.35s ease-in, height 0.35s ease-in',\n              color: '#2C3531',\n              fontWeight: '700',\n              textShadow: '1px 1px #D1E8E2',\n              textAlign: 'center',\n              fontSize: '1.5em',\n              textWrap: 'wrap'\n            }\n          }\n          onClick={\n            (transitionAllowed) ? (function(){\n              centerTransition(index,tierIndex)\n              preventTransitions()\n            }) : ()=>{}\n          }\n        >\n          {(radialDisplacement === 0)? (<div\n              style={{\n                width: `${diameter}px`,\n                height: `${diameter}px`,\n              }}\n            >\n            <div style={{\n              userSelect: 'none',              \n            }}><span\n              style={{\n                fontSize: ``,\n                backgroundColor: 'rgba(255,203,154,0.65)',\n                height: `${diameter / 3}px`,\n                lineHeight: `${diameter / 3}px`\n              }}\n            >Remember<br></br>{text.split('').slice(0,16).join('')+ '?'}</span></div>\n            <button\n              style={{\n                width: 7*diameter/18,\n                userSelect: 'none',\n                zIndex: zIndex+1,\n                padding: '0.25em',\n                backgroundColor: '#FFCB9A',\n                borderRadius: '0.5em',\n                marginRight: '0.5em'\n              }}\n              onClick={\n                ()=>{\n                  removeDataByKey(this.props.id,1)\n                  allowTransitions()\n                  incrementSuccess()\n                  // this.props.recordGuess(1,this.props.id,text)\n                }\n              }\n            >\n              I remember\n            </button>\n            <button \n              style={{\n                width: 7*diameter/18,\n                userSelect: 'none',\n                zIndex: zIndex+1,\n                padding: '0.25em',\n                backgroundColor: '#D9B08C',\n                borderRadius: '0.5em'\n              }}\n              onClick={\n                ()=>{\n                  removeDataByKey(this.props.id,0)\n                  allowTransitions()\n                  incrementFailure()\n                  // this.props.recordGuess(0,this.props.id,text)\n                }\n              }\n            >\n              I forgot\n            </button>\n          </div>) : ('')}\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\n\nexport default class CircleMemoryOutcomes extends React.Component {\n  state = {}\n\n  render(){\n    const {\n      successes,\n      failures\n    } = this.props\n\n\n    return (\n      <div style = {{\n        paddingLeft: '1em',\n        paddingRight: '1em',\n        padding: '0.5em',\n        display: 'flex',\n        justifyContent: 'space-between',\n        backgroundColor: '#2C3531',\n        color: '#D1E8E2'\n      }}>\n        <div>Correct Guesses: {successes}</div>\n        <div>Incorrect Guesses: {failures}</div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport './DatasetContainer.scss'\nimport DataPoint from './datapoint.component'\nimport CircleMemoryOutcomes from './circlememoryoutcomes.component'\nimport CircleCalculations from '../javascripts/circleCalculations'\nimport { Redirect } from 'react-router-dom'\n\nimport axios from 'axios'\n\n\nvar tierSizes = [8,15,22]\n\nexport default class DatasetContainer extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      diameter: this.props.diameter,\n      subCircleDiameter: CircleCalculations.calculateSubCircleDiameter(this.props.diameter,(CircleCalculations.circleTiers(this.props.data,this.props.diameter)[0]['data'])),\n      data: this.props.data,\n      circleTiers: CircleCalculations.circleTiers(this.props.data,this.props.diameter),\n      largestDiameter: CircleCalculations.largestDiameter(this.props.data,this.props.diameter),\n      parentWidth: this.props.parentWidth,\n      parentHeight: this.props.parentHeight,\n      parentWidthUnit: this.props.parentWidthUnit,\n      parentHeightUnit: this.props.parentHeightUnit,\n      transitionsAllowed: true,\n      successes: 0,\n      failures: 0,\n      session_id: undefined,\n      axiosInDataPointsAllowed: true,\n      completeMessage: undefined,\n      redirecting: false,\n    }\n  }\n\n  renderContainerCircle = (diameter,backgroundColor,transformOffset,zIndex) => {\n    return(\n      <div style = {{\n        height: 0,\n        width: 0\n      }}>\n        <div \n          className=\"DS-container\"\n          style={{\n            position: \"relative\",\n            width: 2*diameter,\n            height: 2*diameter,\n            backgroundColor,\n            zIndex: (zIndex || '0'),\n            top: `calc(${this.state.parentHeight/2}${this.state.parentHeightUnit} - ${this.state.largestDiameter - transformOffset}px)`,\n            left: `calc(${this.state.parentWidth/2}${this.state.parentWidthUnit} - ${this.state.largestDiameter - transformOffset}px)`\n          }}\n        >\n        </div>\n      </div>\n    )\n  }\n\n  recordGuess = (remembered,datapoint_id,key) => {\n    if(this.state.axiosInDataPointsAllowed){\n\n      axios.post(`http://localhost:5000/guess-sessions/${this.state.session_id}/${datapoint_id}/add`,{user_id: this.props.user_id, remembered})\n        .then(res=>{\n          console.log()\n          console.log('Guess Test Underway')\n          console.log(res.data)\n          console.log()\n        })\n    }\n\n\n  }\n\n  removeDataByKey = (key,remembered) => {\n    console.log(`key: ${key}`)\n    let newDataArray = Object.entries(this.state.data)\n\n    let newDataObject = newDataArray.reduce((newDataObj,keyValPair,index)=>{\n      if(keyValPair[0]!==key){\n        newDataObj[keyValPair[0]] = keyValPair[1]\n      } else {\n        console.log(`keyValPair[0]: ${keyValPair[0]}`)\n        console.log(`keyValPair[1]: ${keyValPair[1]}`)\n      }\n      return newDataObj\n    },{})\n\n    let datapoint_id = key\n\n    axios.post(`http://localhost:5000/guess-sessions/${this.state.session_id}/${datapoint_id}/add`,{user_id: this.props.user_id, remembered})\n      .then(res=>{\n        console.log()\n        console.log('Guess Test Underway')\n        console.log(res.data)\n        console.log()\n      })\n\n    this.setState({\n      data: newDataObject,\n      circleTiers: CircleCalculations.circleTiers(newDataObject,this.state.diameter),\n      selectedCircleIndex: (Object.entries(newDataObject).length === 1) ? 0 : undefined,\n      selectedCircleTierIndex: (Object.entries(newDataObject).length === 1) ? 0 : undefined,\n      largestDiameter: CircleCalculations.largestDiameter(newDataObject,this.state.diameter),\n      axiosInDataPointsAllowed: true\n    })\n  }\n\n  incrementSuccess = () => {\n    this.setState({\n      successes: this.state.successes + 1\n    })\n  }\n  incrementFailure = () => {\n    this.setState({\n      failures: this.state.failures + 1\n    })\n  }\n\n  centerTransition = (index,tierIndex) => {\n    this.setState({\n      selectedCircleIndex: index,\n      selectedCircleTierIndex: tierIndex\n    })\n  }\n\n  allowTransitions = () => {\n    this.setState({\n      transitionsAllowed: true\n    })\n  }\n\n  preventTransitions = () => {\n    this.setState({\n      transitionsAllowed: false\n    })\n  }\n\n  renderCircleRing = (diameter,data,transformOffset,fixedDiameter,tierIndex,axiosInDataPointsAllowed) =>{\n    return (\n      <div>\n        {Object.entries(data).map((person,index)=>{\n            return <DataPoint\n\n              recordGuess = {this.recordGuess}\n              axiosInDataPointsAllowed = {axiosInDataPointsAllowed}\n              key={`dp-${index}`}\n              id={person[0]}\n              zIndex={(tierIndex!==1) ? (tierIndex) : 5}\n              parentDiameter={diameter}\n              diameter={(this.state.selectedCircleIndex === index && this.state.selectedCircleTierIndex === tierIndex) ? (2*this.state.circleTiers[0]['outerDiameter']) : (fixedDiameter || CircleCalculations.calculateSubCircleDiameter(diameter,data))}\n              rotationAngle={CircleCalculations.calculateSubCircleRotationAngle(index,data)}\n              radialDisplacement={(this.state.selectedCircleIndex === index && this.state.selectedCircleTierIndex === tierIndex) ? 0 : (CircleCalculations.calculateNewRadialDisplacement(fixedDiameter/2,tierSizes[tierIndex]) || CircleCalculations.calculateSubCircleRadialDisplacement(diameter,data))}\n              text={person[1].memoryText}\n              image_url={person[1].imageURL}\n              transformOffset={transformOffset}\n              top={`calc(${this.state.parentHeight/2}${this.state.parentHeightUnit} - ${this.state.largestDiameter}px)`}\n              left={`calc(${this.state.parentWidth/2}${this.state.parentWidthUnit} - ${this.state.largestDiameter}px)`}\n              transitionAllowed={this.state.transitionsAllowed}\n              index={index}\n              tierIndex={tierIndex}\n              centred={(this.selectedCircleIndex === index && this.selectedCircleTierIndex === tierIndex)}\n              centerTransition={this.centerTransition}\n              preventTransitions={this.preventTransitions}\n              allowTransitions={this.allowTransitions}\n              removeDataByKey={this.removeDataByKey}\n              incrementSuccess={this.incrementSuccess}\n              incrementFailure={this.incrementFailure}\n              backgroundSize={`${(this.state.selectedCircleIndex === index && this.state.selectedCircleTierIndex === tierIndex) ? (2*this.state.circleTiers[0]['outerDiameter']) : (fixedDiameter || CircleCalculations.calculateSubCircleDiameter(diameter,data))}px ${(this.state.selectedCircleIndex === index && this.state.selectedCircleTierIndex === tierIndex) ? (2*this.state.circleTiers[0]['outerDiameter']) : (fixedDiameter || CircleCalculations.calculateSubCircleDiameter(diameter,data))}px,cover`}\n              // backgroundSize=\"contain\"\n            />          \n          })}\n      </div>\n    ) \n  }\n\n  componentDidMount = () => {\n\n    let { collection_id, session_id } = this.props.match.params\n    // Collect all data as needed\n    axios.post(`http://localhost:5000/datacollections/${collection_id}/datapoints`,{user_id: this.props.user_id})\n      .then(res=> {\n        let newDataArray = res.data.dataPoints\n\n        // Make axios call to validate session id\n        axios.post(`http://localhost:5000/guess-sessions/${session_id}/isvalid`,{user_id: this.props.user_id}).then(res=>{\n          if(res.data.guessSessionIsValid){\n            console.log('valid')\n\n            // Make axios call to find guesses\n            axios.post(`http://localhost:5000/guess-sessions/${session_id}/guesses`,{user_id: this.props.user_id}).then(res=>{\n              \n              let dataPointIDsGuessed = res.data.guesses.map(guess=>guess.dataPoint)\n\n              console.log()\n              console.log('All data points')\n              console.log(newDataArray)\n              console.log()\n              console.log('Guessed Data Points')\n              console.log(dataPointIDsGuessed)\n\n              const checkIfAlreadyGuessed = (dp) => {\n                let flagToKeep = true\n                dataPointIDsGuessed.forEach((dataPointIDGuessed)=> {\n                  if(dp._id === dataPointIDGuessed){\n                    console.log(`Element '${dataPointIDGuessed}' removed!`)\n                    flagToKeep = false\n                  }\n                })\n                return flagToKeep\n              }\n\n              // then filter datapoints with guesses\n              let filteredDataArray = newDataArray.filter(dataPoint=>{\n                return checkIfAlreadyGuessed(dataPoint);\n              })\n\n              let filteredDataObject = filteredDataArray.reduce((dataObject,currentDataPoint)=>{\n                dataObject[currentDataPoint._id] = {\n                  imageURL: currentDataPoint.imageUrl,\n                  memoryText: currentDataPoint.memoryText\n                }\n                return dataObject\n              },{})\n\n              console.log()\n              console.log('filteredDataObject')\n              console.log(filteredDataObject)\n              console.log()\n            \n              // setstate to render data\n              this.setState({\n                data: filteredDataObject,\n                circleTiers: CircleCalculations.circleTiers(filteredDataObject,this.props.diameter),\n                selectedCircleIndex: (Object.entries(filteredDataObject).length === 1) ? 0 : undefined,\n                selectedCircleTierIndex: (Object.entries(filteredDataObject).length === 1) ? 0 : undefined,\n                largestDiameter: CircleCalculations.largestDiameter(filteredDataObject,this.state.diameter),\n                session_id\n              })\n\n            })\n\n          } else {\n            console.log('invalid')\n            // Make Axios call to post a new session\n            axios.post(`http://localhost:5000/guess-sessions/${collection_id}/add`,{user_id: this.props.user_id}).then(res=>{\n\n              session_id = res.data.session_id\n\n              console.log('New Session Added')\n              let newDataObject = newDataArray.reduce((dataObject,currentDataPoint)=>{\n                dataObject[currentDataPoint._id] = {\n                  imageURL: currentDataPoint.imageUrl,\n                  memoryText: currentDataPoint.memoryText\n                }\n                return dataObject\n              },{})\n\n              console.log()\n              console.log('newDataObject')\n              console.log(newDataObject)\n              console.log()\n              \n              // setstate to render data\n              this.setState({\n                data: newDataObject,\n                circleTiers: CircleCalculations.circleTiers(newDataObject,this.props.diameter),\n                selectedCircleIndex: (Object.entries(newDataObject).length === 1) ? 0 : undefined,\n                selectedCircleTierIndex: (Object.entries(newDataObject).length === 1) ? 0 : undefined,\n                largestDiameter: CircleCalculations.largestDiameter(newDataObject,this.state.diameter),\n                session_id\n              })\n            })\n            \n          }\n        })\n\n        // Make axios call to validate session id\n          // then \n            // if valid\n              // Make axios call to find guesses\n                // then filter datapoints with guesses\n                // setstate to render data\n            // if invalid\n              // Make Axios call to post a new session\n              // setstate to render data\n\n        // this.setState({\n        //   data: newDataObject,\n        //   circleTiers: CircleCalculations.circleTiers(newDataObject,this.props.diameter),\n        //   selectedCircleIndex: (Object.entries(newDataObject).length === 1) ? 0 : undefined,\n        //   selectedCircleTierIndex: (Object.entries(newDataObject).length === 1) ? 0 : undefined,\n        //   largestDiameter: CircleCalculations.largestDiameter(newDataObject,this.state.diameter),\n        // })\n\n\n      }).catch(err=>console.log(`Error: ${err}`))\n\n  }\n\n  prepareToRedirect = () => {\n    if(Object.keys(this.state.data).length === 0 && !this.state.redirecting){\n      this.setState({\n        redirecting: true\n      })\n    }\n  }\n\n  redirectOnFinish = () => {\n    if(this.state.redirecting){\n      return <Redirect to='/React-Recall/data_collections/me'/>\n    }\n  }\n\n  render(){\n    const {\n      subCircleDiameter,\n      circleTiers,\n      largestDiameter,\n      successes,\n      failures\n    } = this.state\n    return (\n      <div \n        className=\"DS-offset\"\n        style={{}}\n      > \n      {this.prepareToRedirect()}\n      {this.redirectOnFinish()}\n      {(this.state.completeMessage) ? this.state.completeMessage : '' }\n        {circleTiers.map((circleTier,index)=>{\n          return (\n            <div \n              key={`CircleTier: ${index}`}\n              style={{\n                width: 0,\n                height: 0\n              }}\n            >\n            {/* Render Circle Ring */}\n            {\n              this.renderCircleRing(\n                circleTier.outerDiameter,\n                circleTier.data,\n                largestDiameter - circleTier.outerDiameter,\n                (Object.keys(circleTier.data).length !== tierSizes[index] && index!==0) ? (subCircleDiameter) : (null),\n                index,\n                this.state.axiosInDataPointsAllowed\n              )\n            }\n            {/* Render Circle Backgrounds */}\n            {\n              this.renderContainerCircle(\n                circleTier.outerDiameter,\n                '#116466',\n                (\n                  largestDiameter - circleTier.outerDiameter\n                )\n              )\n            }\n          </div>\n          )\n        })}\n        <CircleMemoryOutcomes successes={successes} failures={failures} />\n      </div>\n    )\n  }\n}","import React from 'react'\nimport './loginregister.component.scss'\nimport $ from 'jquery'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\n\nexport default class LoginRegister extends React.Component {\n\n  state = {\n    loginUsername: '',\n    registerUsername: '',\n    email: '',\n    loginPassword: '',\n    registerPassword: '',\n    loginErrorMessage: '',\n    registerErrorMessage: ''\n  }\n\n  onChangeLoginUsername = (e) =>{\n    this.setState({\n      loginUsername: e.target.value\n    })\n  }\n\n  onChangeLoginPassword = (e) =>{\n    this.setState({\n      loginPassword: e.target.value\n    })\n  }\n\n  onChangeRegisterUsername = (e) =>{\n    this.setState({\n      registerUsername: e.target.value\n    })\n  }\n\n  onChangeEmail = (e) =>{\n    this.setState({\n      email: e.target.value\n    })\n  }\n\n  onChangeRegisterPassword = (e) =>{\n    this.setState({\n      registerPassword: e.target.value\n    })\n  }\n  \n  renderRedirect = () => {\n    if(this.props.user_id !== null && this.props.user_id !== undefined){\n      return <Redirect to='/React-Recall/data_collections/me'/>\n    }\n  }\n\n  submitLogin = (e) => {\n    e.preventDefault()\n\n    const loginData = { username: this.state.loginUsername, password: this.state.loginPassword }\n    axios.post('http://localhost:5000/login',loginData).then(res => {\n      if(res.data.authenticated){\n        this.props.updateUserID(res.data.user_id)\n        \n      } else {\n        // Change Login Error Message Here\n      }\n    })\n    .catch(err => this.setState({errorMessage: err}))\n  }\n\n  submitRegister = (e) => {\n    e.preventDefault()\n    const newUser = {\n      username: this.state.registerUsername,\n      email: this.state.email,\n      password: this.state.registerPassword\n    }\n    axios.post('http://localhost:5000/users/add', newUser)\n      .then(res=> {\n        console.log(res.data.msg)\n        if(res.data.success){\n          console.log('Successful user addition, logging in...')\n          const loginData = { username: newUser.username, password: newUser.password }\n          axios.post('http://localhost:5000/login',loginData).then(res => {\n\n\n            if(res.data.authenticated){\n              // window.location = '/data_collections/new'\n              \n            } else {\n              // Change Register Error Message Here\n            }\n          })\n        } else {\n          this.setState({errorMessage: 'Invalid email, username or password.'})\n        }\n      })\n      .catch(err => this.setState({errorMessage: err}))\n\n  }\n\n  componentDidMount = () => {\n    $('.message a').click(function(){\n      $('form').animate({height: \"toggle\", opacity: \"toggle\"}, \"slow\");\n   });\n  }\n\n  render(){\n    return (\n    <div className=\"login-page\">\n      {this.renderRedirect()}\n      {(this.state.loginErrorMessage) ? (<div>{this.state.loginErrorMessage}</div>): ('')}\n      <div className=\"form\">\n        <form className=\"register-form\">\n          <input\n            type=\"text\"\n            placeholder=\"username\"\n            name=\"username\"\n            onChange={this.onChangeRegisterUsername}\n            value={this.state.registerUsername}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"password\"\n            name=\"password\"\n            onChange={this.onChangeRegisterPassword}\n            value={this.state.registerPassword}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"email address\"\n            name=\"email\"\n            onChange={this.onChangeEmail}\n            value={this.state.email}\n          />\n          <button type=\"button\" onClick={this.submitRegister}>create</button>\n          <p className=\"message\">Already registered? <a href=\"#\">Sign In</a></p>\n        </form>\n        <form className=\"login-form\">\n          <input\n            type=\"text\"\n            placeholder=\"username\"\n            name=\"username\"\n            onChange={this.onChangeLoginUsername}\n            value={this.state.loginUsername}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"password\"\n            name=\"password\"\n            onChange={this.onChangeLoginPassword}\n            value={this.state.loginPassword}\n          />\n          <button type=\"button\" onClick={this.submitLogin}>login</button>\n          <p className=\"message\">Not registered? <a href=\"#\">Create an account</a></p>\n        </form>\n      </div>\n    </div>\n    )\n  }\n}","import React from 'react'\nimport './datacollections.component.scss'\nimport axios from 'axios'\nimport { Redirect, Link } from 'react-router-dom'\n\nexport default class DataCollections extends React.Component {\n\n  state = {\n    collections: [],\n    metrics: {},\n    redirectURL: {},\n    loading: true\n  }\n\n  componentDidMount = () => {\n      axios.post(`http://localhost:5000/datacollections`,{user_id: this.props.user_id})\n    .then((res)=>{\n\n        this.setState({\n          // collections: res.data.map((dataCollection,index) => {\n          //   return {\n          //     collectionName: dataCollection.collectionName,\n          //     collection_id: dataCollection._id,\n          //     highlighted: false,\n          //     index\n          //   }\n          // })\n          collections: res.data.filter(dataCollection=>{\n            if(dataCollection.dataPoints.length === 0){\n              return false;\n            }\n            return true\n          }).map((dataCollection,index) => {\n            return {\n              collectionName: dataCollection.collectionName,\n              collection_id: dataCollection._id,\n              highlighted: false,\n              index\n            }\n          }),\n          loading: false\n        })\n    }).catch(err=>console.log(`${err}`))\n  }\n  renderRedirectToPractice = () => {\n    if(this.state.redirectURL.collectionID !== undefined){\n      return <Redirect to={`/React-Recall/practice/${this.state.redirectURL.collectionID}/${(this.state.redirectURL.sessionID) ? (this.state.redirectURL.sessionID) : ('new')}`}/>\n    }\n  }\n\n  renderRedirect = () => {\n    if(this.props.user_id === null || this.props.user_id === null){\n      // return <Redirect to='/login'/>\n      // window.location = '/login'\n    }\n  }\n\n  beginGuessSession = (collection_id) => {\n    // TODO\n    // Make Axios Request here\n    axios.post(`http://localhost:5000/guess-sessions/data-collection/${collection_id}`,{user_id: this.props.user_id}).then((res)=>{\n    \n    let sessionID = null\n\n    \n      if(res.data.guessSession !== undefined && res.data.guessSession !== false){\n        // set the session ID\n        sessionID = res.data.guessSession._id\n      }\n\n      this.setState({\n        redirectURL: {\n          collectionID: collection_id,\n          sessionID: sessionID\n        }\n      })\n    })\n  }\n\n  getMetrics = (index,collection_id) => {\n    axios.post(`http://localhost:5000/datacollections/metrics/${collection_id}`,{user_id: this.props.user_id})\n    .then((res)=>{\n\n      this.setState({\n        collections: this.state.collections.map(collection=>{\n  \n          let isHighlighted = false\n          if(collection.index === index){\n            isHighlighted = true\n          }\n  \n          return {\n            collectionName: collection.collectionName,\n            collection_id: collection.collection_id,\n            highlighted: isHighlighted,\n            index: collection.index\n          }\n        }),\n        metrics: {\n          collectionName: this.state.collections.filter((collection)=>collection.index === index)[0].collectionName,\n          bestRecall: (res.data.worstRecall.averageRecall > res.data.bestRecall.averageRecall) ? 'No data available' : `Best Recall : ${res.data.bestRecall.memoryText} ${res.data.bestRecall.averageRecall}%`,\n          averageRecall: (res.data.worstRecall.averageRecall > res.data.bestRecall.averageRecall) ? '' : `Average Recall : ${res.data.averageRecall}%`,\n          worstRecall: (res.data.worstRecall.averageRecall > res.data.bestRecall.averageRecall) ? '' : `Worst Recall : ${res.data.worstRecall.memoryText} ${res.data.worstRecall.averageRecall}%`\n        }\n      })\n    }).catch(err=>console.log(`${err}`))\n  }\n\n  render(){\n    return (\n      <div>\n        {this.renderRedirect()}\n        {this.renderRedirectToPractice()}\n        <div className=\"metrics-display\">\n          <div style={(this.state.metrics.collectionName) ? ({}): ({padding: 0})} className=\"recall recall-title\">{(this.state.metrics.collectionName) ? (this.state.metrics.collectionName.toUpperCase()) : ('')}</div>\n          <div style={(this.state.metrics.collectionName) ? ({}): ({padding: 0})} className=\"recall\">{(this.state.metrics.averageRecall)}</div>\n          <div style={(this.state.metrics.collectionName) ? ({}): ({padding: 0})} className=\"recall\">{this.state.metrics.bestRecall}</div>\n          <div style={(this.state.metrics.collectionName) ? ({}): ({padding: 0})} className=\"recall\">{this.state.metrics.worstRecall}</div>\n        </div>\n        {this.state.collections.length === 0 && !this.state.loading  ? <div className=\"make-collection-link-container\"><Link className=\"make-collection-link\" to='/data_collections/new'> Make a collection! </Link></div> : ''}\n        {this.state.collections.map((collection,index)=>\n        <div key={`collection${index}`} className={`data-collection ${(collection.highlighted) ? ('highlighted-collection') : ('')}`} >\n          <div className=\"data-collection-name\">{collection.collectionName}</div>\n\n          <div onClick={()=>this.getMetrics(index,collection.collection_id)} className={`data-collection-metrics`}>\n            Metrics\n            {/* <div className=\"recall-data\">\n              <div>Worst Recall:</div>\n              <div>{`${this.findWorstMemoryTextOfCollection(collection.collection_id)}: ${this.findWorstRecallOfCollection(collection.collection_id)}%`}</div>\n            </div> */}\n            {/* <div className=\"recall-data\">\n              <div>Best Recall:</div>\n              <div></div>\n            </div> */}\n            {/* <div className=\"recall-data\">\n              <div>Average Recall:</div>\n              <div></div>\n            </div> */}\n          </div>\n          \n          <div onClick={()=>this.beginGuessSession(collection.collection_id)} className=\"practice\">Practice</div>\n        </div>\n        )}\n      </div>\n    )\n  }\n}","import React from 'react'\nimport $ from 'jquery'\nimport axios from 'axios'\nimport './newcollectionform.component.scss'\n\nexport default class NewCollectionForm extends React.Component {\n\n  state = {\n    collectionName: '',\n    collectionID: '',\n    memoryText: '',\n    imageURL: '',\n    diameter: 100\n  }\n\n  addToCollection = () => {\n    // Make axios request to make new datapoint\n    axios.post(`http://localhost:5000/datacollections/${this.state.collectionID}/add`,\n    {\n      user_id: this.props.user_id,\n      memoryText: this.state.memoryText,\n      imageUrl: this.state.imageURL\n    })\n      .then(res=>{\n        this.setState({\n          memoryText: '',\n          imageURL: ''\n        })\n      })\n  }\n\n  onChangeMemoryText = (e) => {\n    this.setState({\n      memoryText: e.target.value\n    })\n  }\n\n  onChangeImageURL = (e) => {\n    this.setState({\n      imageURL: e.target.value\n    })\n  }\n\n  onChangeCollectionName = (e) =>{\n    this.setState({\n      collectionName: e.target.value\n    })\n  }\n\n  collectionNameChosen = (e) => {\n    e.preventDefault()\n    // Make axios request to make new collection\n    $('form').animate({height: \"toggle\", opacity: \"toggle\"}, \"slow\"); \n    axios.post(`http://localhost:5000/datacollections/add`,{user_id: this.props.user_id, collectionName: this.state.collectionName})\n      .then(res=>{\n        this.setState({\n          collectionID: res.data.collection_id\n        })\n      })\n  }\n\n  render(){\n    return (\n      <div className=\"login-page\">\n      <div className=\"form\">\n        <form className=\"register-form\">\n          <h3>{this.state.collectionName}</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Memory text\"\n            name=\"memoryText\"\n            onChange={this.onChangeMemoryText}\n            value={this.state.memoryText}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Image URL\"\n            name=\"imageURL\"\n            onChange={this.onChangeImageURL}\n            value={this.state.imageURL}\n          />\n\n          <div\n            className=\"demo-container\"\n          >\n            <div\n              className=\"demo-datapoint\"\n              style={{\n                backgroundImage: `url(${this.state.imageURL})`,\n              }}\n            >\n\n            </div>\n          </div>\n\n          <button\n            type=\"button\"\n            onClick={this.addToCollection}\n            style={{marginBottom: '1em'}}\n          >\n            Add To Collection\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.submitCollection}\n          >\n            Submit Collection\n          </button>\n        </form>\n        <form className=\"login-form\">\n          <h3>New  Collection</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Name your collection!\"\n            name=\"collectionName\"\n            onChange={this.onChangeCollectionName}\n            value={this.state.collectionName}\n          />\n          <button\n            type=\"button\"\n            onClick={this.collectionNameChosen}\n          >\n            Continue\n          </button>\n        </form>\n      </div>\n    </div>\n    )\n  }\n}","import React from 'react';\nimport {BrowserRouter as Router, Route } from \"react-router-dom\"\nimport { Redirect } from 'react-router-dom'\nimport './reset.css';\n\nimport Navbar from \"./components/navbar.component\"\nimport DatasetContainer from './components/datasetcontainer.component'\nimport LoginRegisterForm from './components/loginregister.component'\nimport DataCollections from './components/datacollections.component'\nimport NewCollectionForm from './components/newcollectionform.component'\n\n// TODO\n  // Hard-code all data and finish UI implementation\n    // Move highlights to center\n    // Allow User Input - Success or Failure\n    // Remove highlighted data afterward\n      // Store the data in correct & incorrect arrays inside the state \n  // Allow user input of photos & text through drag and drop logic\n    // Force square input - stretch goal\n      // By clipping or,\n      // Rejecting non-square images\n  // Manage user information through db\n    // Initially use image urls\n    // Implement Amazon S3 for drag & drop if there is time\n\nlet dataset1 =  {    \n    Placeholder: ''\n  // Daniel: 'https://images.unsplash.com/photo-1502791451862-7bd8c1df43a7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Hinze: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1500&q=80',\n  // Erik: 'https://images.unsplash.com/photo-1499996860823-5214fcc65f8f?ixlib=rb-1.2.1&auto=format&fit=crop&w=1404&q=80',\n  // Bater: 'https://images.unsplash.com/photo-1535441577682-5a7bc0702a7d?ixlib=rb-1.2.1&auto=format&fit=crop&w=1534&q=80',\n  // Sarah: 'https://images.unsplash.com/photo-1535324492437-d8dea70a38a7?ixlib=rb-1.2.1&auto=format&fit=crop&w=1374&q=80',\n  // Gemima: 'https://images.unsplash.com/photo-1521252659862-eec69941b071?ixlib=rb-1.2.1&auto=format&fit=crop&w=1480&q=80',\n  // Warren: 'https://images.unsplash.com/photo-1492562080023-ab3db95bfbce?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Mohammed: 'https://images.unsplash.com/photo-1484515991647-c5760fcecfc7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Drew: 'https://images.unsplash.com/photo-1480455624313-e29b44bbfde1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Atikh: 'https://images.unsplash.com/photo-1471015060382-6cbd8b4e34d0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Nguyen: 'https://images.unsplash.com/photo-1485361767769-5ceffc9f2144?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Andre: 'https://images.unsplash.com/photo-1491617636265-a676d2700d7d?ixlib=rb-1.2.1&auto=format&fit=crop&w=1400&q=60',\n  // Allef: 'https://images.unsplash.com/photo-1485742032238-7543513eeba6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Carla: 'https://images.unsplash.com/photo-1552771390-bc65936fe55c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Ashley: 'https://images.unsplash.com/photo-1505841907000-5bf5e95cd105?ixlib=rb-1.2.1&auto=format&fit=crop&w=1400&q=60',\n  // Madelaine: 'https://images.unsplash.com/photo-1546538994-4f15d0aa966f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Maura: 'https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Sasha: 'https://images.unsplash.com/photo-1513732822839-24f03a92f633?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Jack: 'https://images.unsplash.com/photo-1528892952291-009c663ce843?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Jessica: 'https://images.unsplash.com/photo-1532910404247-7ee9488d7292?ixlib=rb-1.2.1&auto=format&fit=crop&w=1400&q=60',\n  // Hope: 'https://images.unsplash.com/photo-1517841905240-472988babdf9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Tobias: 'https://images.unsplash.com/photo-1521119989659-a83eee488004?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Albert: 'https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Denise: 'https://images.unsplash.com/photo-1486074051793-e41332bf18fc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Michael: 'https://images.unsplash.com/photo-1491528323818-fdd1faba62cc?ixlib=rb-1.2.1&auto=format&fit=crop&w=1400&q=60',\n  // Maddie: 'https://images.unsplash.com/photo-1531251445707-1f000e1e87d0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Britney: 'https://images.unsplash.com/photo-1516756587022-7891ad56a8cd?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Eduardo: 'https://images.unsplash.com/photo-1522609925277-66fea332c575?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Gabbie: 'https://images.unsplash.com/photo-1489424731084-a5d8b219a5bb?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Ophelia: 'https://images.unsplash.com/photo-1523661149972-0becaca2016e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Rachel: 'https://images.unsplash.com/photo-1506863530036-1efeddceb993?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Tobuscus: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&auto=format&fit=crop&w=1400&q=60',\n  // Kimson: 'https://images.unsplash.com/photo-1502823403499-6ccfcf4fb453?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Stefan: 'https://images.unsplash.com/photo-1506634572416-48cdfe530110?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // May: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Joe: 'https://images.unsplash.com/photo-1513956589380-bad6acb9b9d4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Tyler: 'https://images.unsplash.com/photo-1519345182560-3f2917c472ef?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Brooke: 'https://images.unsplash.com/photo-1450297350677-623de575f31c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Paolo: 'https://images.unsplash.com/photo-1500832333538-837287aad2b6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Georgia: 'https://images.unsplash.com/photo-1496203695688-3b8985780d6a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Mary: 'https://images.unsplash.com/photo-1502685104226-ee32379fefbe?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Cristian: 'https://images.unsplash.com/photo-1511546395756-590dffdcdbd1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Ayo: 'https://images.unsplash.com/photo-1463453091185-61582044d556?ixlib=rb-1.2.1&auto=format&fit=crop&w=1400&q=60',\n  // Ryan: 'https://images.unsplash.com/photo-1503593245033-a040be3f3c82?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60',\n  // Michelle: 'https://images.unsplash.com/photo-1526080652727-5b77f74eacd2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1400&q=60'\n\n\n}\n\nclass App extends React.Component {\n\n  state = {\n    user_id: undefined\n  }\n\n  updateUserID = (newID) => {\n    this.setState({\n      user_id: newID\n    })\n  }\n\n  renderLoginReturn = () => {\n    if(this.state.user_id === undefined){\n      return <Redirect to='/React-Recall/login' />\n    }\n  }\n\n  render(){\n    return (\n      <Router>\n        {this.renderLoginReturn()}\n        <div \n          className=\"App\"\n          style = {{\n            backgroundColor: '#D1E8E2'\n          }}\n        >\n        <Navbar user_id={this.state.user_id} updateUserID={this.updateUserID}/>\n        <Route path=\"/React-Recall/login\" exact component={()=><LoginRegisterForm user_id={this.state.user_id} updateUserID={this.updateUserID}/>} />\n          <Route path=\"/React-Recall/data_collections/me\" exact component={() => <DataCollections user_id={this.state.user_id} updateUserID={this.updateUserID}/>} />\n          <Route path=\"/React-Recall/data_collections/new\" exact component={()=><NewCollectionForm user_id={this.state.user_id} />} />\n  \n          <Route path=\"/React-Recall/practice/:collection_id/:session_id\" component={\n            ({match})=><DatasetContainer match = {match} user_id={this.state.user_id} updateUserID={this.updateUserID} diameter={140} data={dataset1} parentWidth={100} parentHeight={100} parentWidthUnit={'vw'} parentHeightUnit={'vh'}/>\n          }/>\n  \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}